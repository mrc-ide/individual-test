// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// create_model
Rcpp::XPtr<Model> create_model();
RcppExport SEXP _individualtest_create_model() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(create_model());
    return rcpp_result_gen;
END_RCPP
}
// run_model
void run_model(const Rcpp::XPtr<Model> m);
RcppExport SEXP _individualtest_run_model(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::XPtr<Model> >::type m(mSEXP);
    run_model(m);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_individualtest_create_model", (DL_FUNC) &_individualtest_create_model, 0},
    {"_individualtest_run_model", (DL_FUNC) &_individualtest_run_model, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_individualtest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
